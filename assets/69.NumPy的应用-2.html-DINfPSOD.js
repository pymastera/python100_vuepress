import{_ as s,c as a,a as e,o as i}from"./app-D-bq_jAa.js";const l="/assets/box_plot_1-D3Kg1wSh.png",t="/assets/box_plot_2-DX9Gsj1C.png",p={};function d(r,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h2 id="numpy的应用-2" tabindex="-1"><a class="header-anchor" href="#numpy的应用-2"><span>NumPy的应用-2</span></a></h2><h3 id="数组对象的方法" tabindex="-1"><a class="header-anchor" href="#数组对象的方法"><span>数组对象的方法</span></a></h3><h4 id="获取描述统计信息" tabindex="-1"><a class="header-anchor" href="#获取描述统计信息"><span>获取描述统计信息</span></a></h4><p>描述统计信息主要包括数据的集中趋势、离散程度和频数分析等，其中集中趋势主要看均值和中位数，离散程度可以看极值、方差、标准差等，详细的内容大家可以阅读<a href="https://zhuanlan.zhihu.com/p/595273755" target="_blank" rel="noopener noreferrer">《统计思维系列课程01：解读数据》</a>。</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array1 = np.random.randint(1, 100, 10)</span>
<span class="line">array1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([46, 51, 15, 42, 53, 71, 20, 62,  6, 94])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>计算总和、均值和中位数。</strong></p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">print(array1.sum())</span>
<span class="line">print(np.sum(array1))</span>
<span class="line">print(array1.mean())</span>
<span class="line">print(np.mean(array1))</span>
<span class="line">print(np.median(array1))</span>
<span class="line">print(np.quantile(array1, 0.5))</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>说明</strong>：上面代码中的<code>mean</code>、<code>median</code>和<code>quantile</code>分别是 NumPy 中计算算术平均值、中位数和分位数的函数，其中<code>quantitle</code>函数的第二个参数设置为0.5表示计算50%分位数，也就是中位数。</p></blockquote><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">460</span>
<span class="line">460</span>
<span class="line">46.0</span>
<span class="line">46.0</span>
<span class="line">48.5</span>
<span class="line">48.5</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>极值、全距和四分位距离。</strong></p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">print(array1.max())</span>
<span class="line">print(np.amax(array1))</span>
<span class="line">print(array1.min())</span>
<span class="line">print(np.amin(array1))</span>
<span class="line">print(array1.ptp())</span>
<span class="line">print(np.ptp(array1))</span>
<span class="line">q1, q3 = np.quantile(array1, [0.25, 0.75])</span>
<span class="line">print(q3 - q1)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">94</span>
<span class="line">94</span>
<span class="line">6</span>
<span class="line">6</span>
<span class="line">88</span>
<span class="line">88</span>
<span class="line">34.25</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方差、标准差和变异系数。</strong></p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">print(array1.var())</span>
<span class="line">print(np.var(array1))</span>
<span class="line">print(array1.std())</span>
<span class="line">print(np.std(array1))</span>
<span class="line">print(array1.std() / array1.mean())</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">651.2</span>
<span class="line">651.2</span>
<span class="line">25.51862065237853</span>
<span class="line">25.51862065237853</span>
<span class="line">0.5547526228777941</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>绘制箱线图。</strong></p><p>箱线图又称为盒须图，是显示一组数据分散情况的统计图，因形状如箱子而得名。 它主要用于反映原始数据分布的特征，还可以进行多组数据分布特征的比较。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">plt.boxplot(array1, showmeans=True)</span>
<span class="line">plt.ylim([-20, 120])</span>
<span class="line">plt.show()</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><p><img src="`+l+`" alt="box_plot_1.png"></p><p>值得注意的是，对于二维或更高维的数组，在获取描述统计信息时，可以通过名为<code>axis</code>的参数指定均值、方差等运算是沿着哪一个轴来执行，<code>axis</code>参数不同，执行的结果可能是大相径庭的，如下所示。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2 = np.random.randint(60, 101, (5, 3))</span>
<span class="line">array2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([[72, 64, 73],</span>
<span class="line">       [61, 73, 61],</span>
<span class="line">       [76, 85, 77],</span>
<span class="line">       [97, 88, 90],</span>
<span class="line">       [63, 93, 82]])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.mean()</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">77.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.mean(axis=0)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([73.8, 80.6, 76.6])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.mean(axis=1)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([69.66666667, 65.        , 79.33333333, 91.66666667, 79.33333333])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.max(axis=0)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([97, 93, 90])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.max(axis=1)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([73, 73, 85, 97, 93])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>再看看绘制箱线图，对于二维数组每一列都会产生一个统计图形，如下所示。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">plt.boxplot(array2, showmeans=True)</span>
<span class="line">plt.ylim([-20, 120])</span>
<span class="line">plt.show()</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><p><img src="`+t+`" alt="box_plot_2.png"></p><blockquote><p><strong>说明</strong>：箱线图中的小圆圈用来表示离群点，也就是大于$\\small{Q_3 + 1.5 \\times IQR}$或小于$\\small{Q_1 - 1.5 \\times IQR}$的值。公式中的常量<code>1.5</code>可以通过绘制箱线图的<code>boxplot</code>函数的<code>whis</code>参数进行修改，常用的值是<code>1.5</code>和<code>3</code>，修改为<code>3</code>通常是为了标识出极度离群点。</p></blockquote><p>需要说明的是，NumPy 的数组对象并没有提供计算几何平均值、调和平均值、去尾平均值等的方法，如果有这方面的需求，可以使用名为 scipy 的三方库，它的<code>stats</code>模块中提供了这些函数。此外，该模块还提供了计算众数、变异系数、偏态、峰度的函数，代码如下所示。</p><p>代码：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> scipy <span class="token keyword">import</span> stats</span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment"># 算术平均值</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>gmean<span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># 几何平均值</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>hmean<span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># 调和平均值</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>tmean<span class="token punctuation">(</span>array1<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 去尾平均值</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>variation<span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 变异系数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>skew<span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment"># 偏态系数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>kurtosis<span class="token punctuation">(</span>array1<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 峰度系数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">46.0</span>
<span class="line">36.22349548825599</span>
<span class="line">24.497219530825497</span>
<span class="line">45.0</span>
<span class="line">0.5547526228777941</span>
<span class="line">0.11644192634527782</span>
<span class="line">-0.7106251396024126</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="其他相关方法概述" tabindex="-1"><a class="header-anchor" href="#其他相关方法概述"><span>其他相关方法概述</span></a></h4><ol><li><p><code>all()</code> / <code>any()</code>方法：判断数组是否所有元素都是<code>True</code> / 判断数组是否有为<code>True</code>的元素。</p></li><li><p><code>astype()</code>方法：拷贝数组，并将数组中的元素转换为指定的类型。</p></li><li><p><code>reshape()</code>方法：调整数组对象的形状。</p></li><li><p><code>dump()</code>方法：保存数组到二进制文件中，可以通过 NumPy 中的<code>load()</code>函数从保存的文件中加载数据创建数组。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array.dump(&#39;array1-data&#39;)</span>
<span class="line">array3 = np.load(&#39;array1-data&#39;, allow_pickle=True)</span>
<span class="line">array3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([46, 51, 15, 42, 53, 71, 20, 62,  6, 94])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>tofile()</code>方法：将数组对象写入文件中。</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array1.tofile(&#39;res/array.txt&#39;, sep=&#39;,&#39;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>fill()</code>方法：向数组中填充指定的元素。</p></li><li><p><code>flatten()</code>方法：将多维数组扁平化为一维数组。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.flatten()</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([1, 2, 3, 4, 5, 6, 7, 8, 9])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>nonzero()</code>方法：返回非0元素的索引。</p></li><li><p><code>round()</code>方法：对数组中的元素做四舍五入操作。</p></li><li><p><code>sort()</code>方法：对数组进行就地排序。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array1.sort()</span>
<span class="line">array1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([ 6, 15, 20, 42, 46, 51, 53, 62, 71, 94])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><code>swapaxes()</code>和<code>transpose()</code>方法：交换数组指定的轴和转置。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.swapaxes(0, 1)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([[1, 4, 7],</span>
<span class="line">       [2, 5, 8],</span>
<span class="line">       [3, 6, 9]])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">array2.transpose()</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">array([[1, 4, 7],</span>
<span class="line">       [2, 5, 8],</span>
<span class="line">       [3, 6, 9]])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>tolist()</code>方法：将数组转成 Python 中的<code>list</code>。</p><p>代码：</p><div class="language-Python line-numbers-mode" data-highlighter="prismjs" data-ext="Python" data-title="Python"><pre><code><span class="line">print(array2.tolist())</span>
<span class="line">print(type(array2.tolist()))</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</span>
<span class="line">&lt;class &#39;list&#39;&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,67)]))}const o=s(p,[["render",d],["__file","69.NumPy的应用-2.html.vue"]]),u=JSON.parse('{"path":"/Day66-80/69.NumPy%E7%9A%84%E5%BA%94%E7%94%A8-2.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"NumPy的应用-2","slug":"numpy的应用-2","link":"#numpy的应用-2","children":[{"level":3,"title":"数组对象的方法","slug":"数组对象的方法","link":"#数组对象的方法","children":[]}]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"Day66-80/69.NumPy的应用-2.md"}');export{o as comp,u as data};
